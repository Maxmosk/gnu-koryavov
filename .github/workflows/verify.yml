

name: Verify installation


on:
  [ pull_request ]

jobs:

  VerifyInstallation:

    runs-on: ubuntu-latest 

    steps:

      - uses: actions/checkout@v2
        with:
          ref : ${{ github.event.pull_request.head.sha }}
          path: gnu-koryavov

      - name: Build docker image
        run: |
          echo "Creating docker image..." &&
          cp gnu-koryavov/ci-scripts/Dockerfile . &&
          docker build -t installation:v1.0 . -f Dockerfile

      - name: Run image and test installation
        run: |
          echo "Running image..." &&
          ls gnu-koryavov/ci-scripts/tests -la &&
          sudo docker run --entrypoint="/home/gnu-koryavov/ci-scripts/tests/test_install.sh" installation:v1.0 

      - name: Create output artifacts directory
        run: |
          mkdir -v output/ &&
          sudo docker save installation:v1.0 > installation_image.tar &&
          mv installation_image.tar output/

      - name: Upload the docker image
        uses: actions/upload-artifact@v2
        with:
          name: docker_output
          path: |
            output/installation_image.tar

  VerifyUbuntuLaunch:

    runs-on: ubuntu-latest

    needs: VerifyInstallation

    steps:

      - uses: actions/checkout@v2
        with:
          ref : ${{ github.event.pull_request.head.sha }}
          path: gnu-koryavov

      - name: Download the docker image from install job
        uses: actions/download-artifact@v2
        with:
          name: docker_output

      - name: Run image and test ubuntu launch
        run: |
          ls -la &&
          docker load -i installation_image.tar &&
          sudo docker run installation:v1.0 gnu-koryavov/ci-scripts/tests/test_install.sh &&
          docker ps -a && 
          container=$(docker ps -a | awk 'FNR == 2 {print $1}') &&
          docker start -a $container
          echo "Running container is: $container"
